{"ast":null,"code":"import _objectSpread from\"/Users/jyotisingh/Desktop/akkshatt/untitled folder/app/video-clipper/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const YouTubeUpload=()=>{const[isAuthenticated,setIsAuthenticated]=useState(false);const[clips,setClips]=useState([]);const[selectedClips,setSelectedClips]=useState([]);const[uploadResults,setUploadResults]=useState([]);const[isUploading,setIsUploading]=useState(false);const[loading,setLoading]=useState(true);// Check authentication status on component mount\nuseEffect(()=>{checkAuthStatus();loadClips();},[]);const checkAuthStatus=async()=>{try{const response=await fetch('http://localhost:5000/auth/youtube/status');const data=await response.json();setIsAuthenticated(data.authenticated);}catch(error){console.error('Failed to check auth status:',error);}finally{setLoading(false);}};const loadClips=async()=>{try{const response=await fetch('http://localhost:5000/clips-list');const data=await response.json();setClips(data.clips.map(clip=>({filename:clip.filename,title:clip.filename.replace('.mp4','').replace('VIRAL_','').replace(/_/g,' '),description:\"Viral clip generated from your content\",isViral:clip.isViral})));}catch(error){console.error('Failed to load clips:',error);}};const getAuthUrl=async()=>{try{const response=await fetch('http://localhost:5000/auth/youtube/url');const data=await response.json();if(data.success){window.open(data.authUrl,'_blank');}}catch(error){console.error('Failed to get auth URL:',error);}};const handleClipSelection=filename=>{setSelectedClips(prev=>prev.includes(filename)?prev.filter(f=>f!==filename):[...prev,filename]);};const uploadSelectedClips=async()=>{if(selectedClips.length===0){alert('Please select at least one clip to upload');return;}setIsUploading(true);setUploadResults([]);try{const results=[];for(const clipFilename of selectedClips){const clip=clips.find(c=>c.filename===clipFilename);const title=(clip===null||clip===void 0?void 0:clip.title)||\"Viral Clip - \".concat(clipFilename);console.log(\"Uploading \".concat(clipFilename,\" with title: \").concat(title));const response=await fetch('http://localhost:5000/upload/youtube-shorts',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({clipFilename,title,description:(clip===null||clip===void 0?void 0:clip.description)||'Viral content generated with AI',tags:['viral','shorts','trending']})});const result=await response.json();results.push(result);// Add delay between uploads\nif(selectedClips.indexOf(clipFilename)<selectedClips.length-1){await new Promise(resolve=>setTimeout(resolve,2000));}}setUploadResults(results);const successful=results.filter(r=>r.success);if(successful.length>0){alert(\"\\u2705 Successfully uploaded \".concat(successful.length,\" clips to YouTube Shorts!\"));}}catch(error){console.error('Upload failed:',error);alert('❌ Upload failed. Please try again.');}finally{setIsUploading(false);}};const makeVideoPublic=async videoId=>{try{const response=await fetch('http://localhost:5000/upload/youtube/make-public',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({videoId})});const result=await response.json();if(result.success){alert('✅ Video is now public!');// Refresh results\nsetUploadResults(prev=>prev.map(r=>r.videoId===videoId?_objectSpread(_objectSpread({},r),{},{privacyStatus:'public'}):r));}else{alert('❌ Failed to make video public: '+result.error);}}catch(error){console.error('Failed to make video public:',error);alert('❌ Failed to make video public');}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"youtube-upload-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading YouTube upload system...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"youtube-upload-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"youtube-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDE80 YouTube Shorts Upload\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Upload your viral clips directly to YouTube Shorts\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-section\",children:!isAuthenticated?/*#__PURE__*/_jsxs(\"div\",{className:\"auth-prompt\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD10 YouTube Authentication Required\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You need to authenticate with YouTube to upload Shorts.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"auth-button\",onClick:getAuthUrl,children:\"\\uD83D\\uDD17 Connect YouTube Account\"}),/*#__PURE__*/_jsx(\"p\",{className:\"auth-note\",children:\"This will open YouTube's authorization page. After authorizing, you'll be redirected back and can start uploading.\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"auth-success\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u2705 YouTube Connected\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You're authenticated and ready to upload Shorts!\"})]})}),isAuthenticated&&/*#__PURE__*/_jsxs(\"div\",{className:\"clip-selection\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCC1 Select Clips to Upload\"}),/*#__PURE__*/_jsx(\"div\",{className:\"clips-grid\",children:clips.map(clip=>/*#__PURE__*/_jsxs(\"div\",{className:\"clip-item \".concat(selectedClips.includes(clip.filename)?'selected':''),onClick:()=>handleClipSelection(clip.filename),children:[/*#__PURE__*/_jsx(\"div\",{className:\"clip-checkbox\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedClips.includes(clip.filename),onChange:()=>handleClipSelection(clip.filename)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"clip-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:clip.title}),/*#__PURE__*/_jsx(\"p\",{children:clip.description}),clip.isViral&&/*#__PURE__*/_jsx(\"span\",{className:\"viral-badge\",children:\"\\uD83D\\uDE80 VIRAL\"})]})]},clip.filename))}),selectedClips.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"upload-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"upload-button\",onClick:uploadSelectedClips,disabled:isUploading,children:isUploading?'📤 Uploading...':\"\\uD83D\\uDCE4 Upload \".concat(selectedClips.length,\" Clip\").concat(selectedClips.length>1?'s':'',\" to YouTube Shorts\")})})]}),uploadResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"upload-results\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCA Upload Results\"}),/*#__PURE__*/_jsx(\"div\",{className:\"results-grid\",children:uploadResults.map((result,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"result-item \".concat(result.success?'success':'error'),children:result.success?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u2705 Upload Successful\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Title:\"}),\" \",result.title]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Video ID:\"}),\" \",result.videoId]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",result.privacyStatus]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-actions\",children:[/*#__PURE__*/_jsx(\"a\",{href:result.videoUrl,target:\"_blank\",rel:\"noopener noreferrer\",className:\"view-button\",children:\"\\uD83D\\uDC41\\uFE0F View Video\"}),/*#__PURE__*/_jsx(\"a\",{href:result.shortsUrl,target:\"_blank\",rel:\"noopener noreferrer\",className:\"shorts-button\",children:\"\\uD83D\\uDCF1 View Shorts\"}),result.privacyStatus==='private'&&/*#__PURE__*/_jsx(\"button\",{className:\"public-button\",onClick:()=>result.videoId&&makeVideoPublic(result.videoId),children:\"\\uD83C\\uDF0D Make Public\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u274C Upload Failed\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Error:\"}),\" \",result.error]})]})},index))})]})]});};export default YouTubeUpload;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","YouTubeUpload","isAuthenticated","setIsAuthenticated","clips","setClips","selectedClips","setSelectedClips","uploadResults","setUploadResults","isUploading","setIsUploading","loading","setLoading","checkAuthStatus","loadClips","response","fetch","data","json","authenticated","error","console","map","clip","filename","title","replace","description","isViral","getAuthUrl","success","window","open","authUrl","handleClipSelection","prev","includes","filter","f","uploadSelectedClips","length","alert","results","clipFilename","find","c","concat","log","method","headers","body","JSON","stringify","tags","result","push","indexOf","Promise","resolve","setTimeout","successful","r","makeVideoPublic","videoId","_objectSpread","privacyStatus","className","children","onClick","type","checked","onChange","disabled","index","href","videoUrl","target","rel","shortsUrl"],"sources":["/Users/jyotisingh/Desktop/akkshatt/untitled folder/app/video-clipper/src/YouTubeUpload.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface Clip {\n  filename: string;\n  title: string;\n  description: string;\n  isViral?: boolean;\n}\n\ninterface UploadResult {\n  success: boolean;\n  videoId?: string;\n  videoUrl?: string;\n  shortsUrl?: string;\n  title?: string;\n  privacyStatus?: string;\n  error?: string;\n}\n\nconst YouTubeUpload: React.FC = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [clips, setClips] = useState<Clip[]>([]);\n  const [selectedClips, setSelectedClips] = useState<string[]>([]);\n  const [uploadResults, setUploadResults] = useState<UploadResult[]>([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Check authentication status on component mount\n  useEffect(() => {\n    checkAuthStatus();\n    loadClips();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/auth/youtube/status');\n      const data = await response.json();\n      setIsAuthenticated(data.authenticated);\n    } catch (error) {\n      console.error('Failed to check auth status:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadClips = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/clips-list');\n      const data = await response.json();\n      setClips(data.clips.map((clip: any) => ({\n        filename: clip.filename,\n        title: clip.filename.replace('.mp4', '').replace('VIRAL_', '').replace(/_/g, ' '),\n        description: `Viral clip generated from your content`,\n        isViral: clip.isViral\n      })));\n    } catch (error) {\n      console.error('Failed to load clips:', error);\n    }\n  };\n\n  const getAuthUrl = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/auth/youtube/url');\n      const data = await response.json();\n      if (data.success) {\n        window.open(data.authUrl, '_blank');\n      }\n    } catch (error) {\n      console.error('Failed to get auth URL:', error);\n    }\n  };\n\n  const handleClipSelection = (filename: string) => {\n    setSelectedClips(prev => \n      prev.includes(filename) \n        ? prev.filter(f => f !== filename)\n        : [...prev, filename]\n    );\n  };\n\n  const uploadSelectedClips = async () => {\n    if (selectedClips.length === 0) {\n      alert('Please select at least one clip to upload');\n      return;\n    }\n\n    setIsUploading(true);\n    setUploadResults([]);\n\n    try {\n      const results: UploadResult[] = [];\n\n      for (const clipFilename of selectedClips) {\n        const clip = clips.find(c => c.filename === clipFilename);\n        const title = clip?.title || `Viral Clip - ${clipFilename}`;\n        \n        console.log(`Uploading ${clipFilename} with title: ${title}`);\n\n        const response = await fetch('http://localhost:5000/upload/youtube-shorts', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            clipFilename,\n            title,\n            description: clip?.description || 'Viral content generated with AI',\n            tags: ['viral', 'shorts', 'trending']\n          }),\n        });\n\n        const result = await response.json();\n        results.push(result);\n\n        // Add delay between uploads\n        if (selectedClips.indexOf(clipFilename) < selectedClips.length - 1) {\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n      }\n\n      setUploadResults(results);\n      \n      const successful = results.filter(r => r.success);\n      if (successful.length > 0) {\n        alert(`✅ Successfully uploaded ${successful.length} clips to YouTube Shorts!`);\n      }\n      \n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert('❌ Upload failed. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const makeVideoPublic = async (videoId: string) => {\n    try {\n      const response = await fetch('http://localhost:5000/upload/youtube/make-public', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ videoId }),\n      });\n\n      const result = await response.json();\n      if (result.success) {\n        alert('✅ Video is now public!');\n        // Refresh results\n        setUploadResults(prev => \n          prev.map(r => \n            r.videoId === videoId \n              ? { ...r, privacyStatus: 'public' }\n              : r\n          )\n        );\n      } else {\n        alert('❌ Failed to make video public: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Failed to make video public:', error);\n      alert('❌ Failed to make video public');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"youtube-upload-container\">\n        <div className=\"loading\">Loading YouTube upload system...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"youtube-upload-container\">\n      <div className=\"youtube-header\">\n        <h2>🚀 YouTube Shorts Upload</h2>\n        <p>Upload your viral clips directly to YouTube Shorts</p>\n      </div>\n\n      {/* Authentication Section */}\n      <div className=\"auth-section\">\n        {!isAuthenticated ? (\n          <div className=\"auth-prompt\">\n            <h3>🔐 YouTube Authentication Required</h3>\n            <p>You need to authenticate with YouTube to upload Shorts.</p>\n            <button \n              className=\"auth-button\"\n              onClick={getAuthUrl}\n            >\n              🔗 Connect YouTube Account\n            </button>\n            <p className=\"auth-note\">\n              This will open YouTube's authorization page. After authorizing, \n              you'll be redirected back and can start uploading.\n            </p>\n          </div>\n        ) : (\n          <div className=\"auth-success\">\n            <h3>✅ YouTube Connected</h3>\n            <p>You're authenticated and ready to upload Shorts!</p>\n          </div>\n        )}\n      </div>\n\n      {/* Clip Selection */}\n      {isAuthenticated && (\n        <div className=\"clip-selection\">\n          <h3>📁 Select Clips to Upload</h3>\n          <div className=\"clips-grid\">\n            {clips.map((clip) => (\n              <div \n                key={clip.filename}\n                className={`clip-item ${selectedClips.includes(clip.filename) ? 'selected' : ''}`}\n                onClick={() => handleClipSelection(clip.filename)}\n              >\n                <div className=\"clip-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedClips.includes(clip.filename)}\n                    onChange={() => handleClipSelection(clip.filename)}\n                  />\n                </div>\n                <div className=\"clip-info\">\n                  <h4>{clip.title}</h4>\n                  <p>{clip.description}</p>\n                  {clip.isViral && <span className=\"viral-badge\">🚀 VIRAL</span>}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {selectedClips.length > 0 && (\n            <div className=\"upload-actions\">\n              <button \n                className=\"upload-button\"\n                onClick={uploadSelectedClips}\n                disabled={isUploading}\n              >\n                {isUploading ? '📤 Uploading...' : `📤 Upload ${selectedClips.length} Clip${selectedClips.length > 1 ? 's' : ''} to YouTube Shorts`}\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Upload Results */}\n      {uploadResults.length > 0 && (\n        <div className=\"upload-results\">\n          <h3>📊 Upload Results</h3>\n          <div className=\"results-grid\">\n            {uploadResults.map((result, index) => (\n              <div key={index} className={`result-item ${result.success ? 'success' : 'error'}`}>\n                {result.success ? (\n                  <>\n                    <h4>✅ Upload Successful</h4>\n                    <p><strong>Title:</strong> {result.title}</p>\n                    <p><strong>Video ID:</strong> {result.videoId}</p>\n                    <p><strong>Status:</strong> {result.privacyStatus}</p>\n                    <div className=\"result-actions\">\n                      <a \n                        href={result.videoUrl} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className=\"view-button\"\n                      >\n                        👁️ View Video\n                      </a>\n                      <a \n                        href={result.shortsUrl} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className=\"shorts-button\"\n                      >\n                        📱 View Shorts\n                      </a>\n                      {result.privacyStatus === 'private' && (\n                        <button \n                          className=\"public-button\"\n                          onClick={() => result.videoId && makeVideoPublic(result.videoId)}\n                        >\n                          🌍 Make Public\n                        </button>\n                      )}\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <h4>❌ Upload Failed</h4>\n                    <p><strong>Error:</strong> {result.error}</p>\n                  </>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n\n    </div>\n  );\n};\n\nexport default YouTubeUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}